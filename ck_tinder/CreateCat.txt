constructor(props){
  super(props)
  this.state={
    Cat: {
      color:'',
      breed:'',
      gender:'',
      habitat:'',
      personality: '',
      age: ''
    }
  }
}

handleChange(e){
  const target = e.target
  const attribute = target.name
  var cat = this.state.cat
  cat[attribute] = target.value
  this.setState({cat:cat})
}
handleSubmit(e){
e.preventDefault()
const params = {
  method: "POST",
  headers:  {
  'Content-Type': 'application/json'
  },
  body: JSON.stringify(this.state)
}
fetch('http://localhost:4000/create_cat', params).then((response)=>{
  if(response.ok){
    response.json().then((body)=>{
      this.setState({cat: body.cat})
    })
  }else{
    console.log("error")
  }
})
}

render() {
  return (
    <Fetch url="http://localhost:4000">
      <div className="container">
        <div id='heading'>
          <h1 id='headingtext'>Welcome to Cat Tinder... MEOW!</h1>
        </div>
        <form>
          <div className='row'>
            <div className='col-xs-12'>
              <div className='FormGroup'>
                <label htmlFor='color'>Color:
                </label>
                <input
                  type='text'
                  name='color'
                  id='color'
                  value={this.state.value}
                  onChange={this.handleChange.bind(this)}>
                </input>
              </div>
            </div>
          </div>
          <div className='row'>
            <div className='col-xs-12'>
              <div className='FormGroup'>
                <label htmlFor='breed'>Breed:
                </label>
                <input
                  type='text'
                  name='breed'
                  id='breed'
                  value={this.state.value}
                  onChange={this.handleChange.bind(this)}>
                </input>
              </div>
            </div>
          </div>
          <div className='row'>
            <div className='col-xs-12'>
              <div className='FormGroup'>
                <label htmlFor='gender'>Gender:
                </label>
                <select
                  name='gender'
                  id='gender'
                  value={this.state.value} onChange={this.handleChange.bind(this)}>
                    <option>Male</option>
                    <option>Female</option>
                    <option>Other</option>
                </select>
              </div>
            </div>
          </div>
          <div className='row'>
            <div className='col-xs-12'>
              <div className='FormGroup'>
                <label htmlFor='habitat'>Habitat:
                </label>
                <select
                  name='habitat'
                  id='habitat'
                  value={this.state.value}
                  onChange={this.handleChange.bind(this)}
                >
                  <option>Indoor</option>
                  <option>Outdoor</option>
                  <option>Faral</option>
                </select>
              </div>
            </div>
          </div>
          <div className='row'>
            <div className='col-xs-12'>
              <div className='FormGroup'>
                <label htmlFor='personality'>Personality:
                </label>
                <input
                  type='text'
                  name='personality'
                  id='personality'
                  value={this.state.value}
                  onChange={this.handleChange.bind(this)}>
                </input>
              </div>
            </div>
          </div>
          <div className='row'>
            <div className='col-xs-12'>
              <div className='FormGroup'>
                <label htmlFor='age'>Age:
                </label>
                <input type='number' name='age' id='age'>
                </input>
              </div>
            </div>
          </div>
          <div className='row'>
            <div className='col-xs-12'>
              <div className='FormGroup'>
                <button type='primary'>Submit
                </button>
              </div>
            </div>
          </div>
        </form>
      </div>
    </Fetch>
  );
}
}
